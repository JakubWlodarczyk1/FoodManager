@using FoodManager.Application.Extensions
@using FoodManager.Application.Common
@using FoodManager.Application.Resources.Localizations
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using FoodManager.Application.Product.Dtos
@using FoodManager.Infrastructure.Localization
@model PagedResult<ProductDto>

@{
    ViewData["Title"] = @Lang.Products;
    var pageNumber = int.TryParse(ViewContext.HttpContext.Request.Query["PageNumber"], out var pn) ? pn : PaginationDefaults.DefaultPageNumber;
    var pageSize = int.TryParse(ViewContext.HttpContext.Request.Query["PageSize"], out var ps) ? ps : PaginationDefaults.DefaultPageSize;
    var searchPhrase = ViewContext.HttpContext.Request.Query["SearchPhrase"];

    var sortBy = ViewContext.HttpContext.Request.Query["SortBy"];
    var sortDirection = ViewContext.HttpContext.Request.Query["SortDirection"];
    var nextSortDirection = sortDirection == "Ascending" ? "Descending" : "Ascending";

    var startPage = Math.Max(1, pageNumber - 1);
    var endPage = Math.Min(Model.TotalPages, pageNumber + 1);

    var selectedCategoryIds = ViewContext.HttpContext.Request.Query["CategoryIds"].ToArray();
}

<h1>@Lang.Products</h1>

<div class="d-flex justify-content-between align-items-center mb-3">
    <form method="get" asp-action="Index" class="d-flex flex-grow-1 me-3">
        <div class="input-group">
            <button type="button" class="btn btn-secondary" data-bs-toggle="modal" data-bs-target="#filtersModal">@Lang.Filters</button>
            <input class="form-control" type="text" name="SearchPhrase" placeholder="@Lang.Search..." value="@searchPhrase" />
            <input type="hidden" name="PageSize" value="@pageSize" />
            <input type="hidden" name="SortBy" value="@sortBy" />
            <input type="hidden" name="SortDirection" value="@sortDirection" />
            @foreach (var id in selectedCategoryIds)
            {
                <input type="hidden" name="CategoryIds" value="@id" />
            }
            <button type="submit" class="btn btn-primary">@Lang.Search</button>
        </div>
    </form>
    <div class="ms-auto">
        <a class="btn btn-primary" asp-action="Create">@Lang.AddProduct</a>
    </div>
</div>

<p>
    @string.Format(Lang.ShowingProducts, @Model.ItemsFrom, @Model.ItemsTo, @Model.TotalItemsCount)
</p>

<table class="table table-striped table-bordered">
    <thead>
        <tr>
            <th>
                <a class="text-dark p-0 text-decoration-none" href="@Url.Action("Index", new { pageNumber = pageNumber, pageSize = pageSize, searchPhrase = searchPhrase, sortBy = nameof(ProductDto.Name), sortDirection = nextSortDirection, categoryIds = selectedCategoryIds })">
                    @Lang.Name
                    @if (sortBy == nameof(ProductDto.Name))
                    {
                        <span class="sort-indicator">@((sortDirection == "Ascending") ? "▲" : "▼")</span>
                    }
                    else
                    {
                        <span class="sort-indicator text-muted">⇅</span>
                    }
                </a>
            </th>
            <th>
                <a class="text-dark p-0 text-decoration-none" href="@Url.Action("Index", new { pageNumber = pageNumber, pageSize = pageSize, searchPhrase = searchPhrase, sortBy = nameof(ProductDto.Description), sortDirection = nextSortDirection, categoryIds = selectedCategoryIds })">
                    @Lang.Description
                    @if (sortBy == nameof(ProductDto.Description))
                    {
                        <span class="sort-indicator">@((sortDirection == "Ascending") ? "▲" : "▼")</span>
                    }
                    else
                    {
                        <span class="sort-indicator text-muted">⇅</span>
                    }
                </a>
            </th>
            <th>
                @Lang.Category
            </th>
            <th>
                <a class="text-dark p-0 text-decoration-none" href="@Url.Action("Index", new { pageNumber = pageNumber, pageSize = pageSize, searchPhrase = searchPhrase, sortBy = nameof(ProductDto.Quantity), sortDirection = nextSortDirection, categoryIds = selectedCategoryIds })">
                    @Lang.Quantity
                    @if (sortBy == nameof(ProductDto.Quantity))
                    {
                        <span class="sort-indicator">@((sortDirection == "Ascending") ? "▲" : "▼")</span>
                    }
                    else
                    {
                        <span class="sort-indicator text-muted">⇅</span>
                    }
                </a>
            </th>
            <th>
                <a class="text-dark p-0 text-decoration-none" href="@Url.Action("Index", new { pageNumber = pageNumber, pageSize = pageSize, searchPhrase = searchPhrase, sortBy = nameof(ProductDto.Price), sortDirection = nextSortDirection, categoryIds = selectedCategoryIds })">
                    @Lang.Price (PLN)
                    @if (sortBy == nameof(ProductDto.Price))
                    {
                        <span class="sort-indicator">@((sortDirection == "Ascending") ? "▲" : "▼")</span>
                    }
                    else
                    {
                        <span class="sort-indicator text-muted">⇅</span>
                    }
                </a>
            </th>
            <th>
                <a class="text-dark p-0 text-decoration-none" href="@Url.Action("Index", new { pageNumber = pageNumber, pageSize = pageSize, searchPhrase = searchPhrase, sortBy = nameof(ProductDto.ExpirationDate), sortDirection = nextSortDirection, categoryIds = selectedCategoryIds })">
                    @Lang.ExpirationDate
                    @if (sortBy == nameof(ProductDto.ExpirationDate))
                    {
                        <span class="sort-indicator">@((sortDirection == "Ascending") ? "▲" : "▼")</span>
                    }
                    else
                    {
                        <span class="sort-indicator text-muted">⇅</span>
                    }
                </a>
            </th>
            <th>@Lang.Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Items)
        {
            var isExpiringSoon = item.ExpirationDate <= DateTime.Now.AddDays(3) && item.ExpirationDate >= DateTime.Now;
            var isExpired = item.ExpirationDate < DateTime.Now;

            <tr class="@(isExpired ? "table-danger" : (isExpiringSoon ? "table-warning" : "")) style">
                <td>@Html.DisplayFor(modelItem => item.Name)</td>
                <td>@Html.DisplayFor(modelItem => item.Description)</td>
                <td>@(TranslationHelper.GetTranslatedValue(item.CategoryTranslationKey) ?? item.CategoryName)</td>
                <td>@Html.DisplayFor(modelItem => item.Quantity) @item.Unit.GetDisplayName()</td>
                <td>@Html.DisplayFor(modelItem => item.Price)</td>
                <td>
                    @item.ExpirationDate.ToString("dd-MM-yyyy")
                    @if (isExpired)
                    {
                        <span class="text-danger ms-2" data-bs-toggle="tooltip" data-bs-placement="top" data-bs-custom-class="custom-danger-tooltip" data-bs-title="@Lang.ProductExpired">
                            <i class="fa-solid fa-triangle-exclamation"></i>
                        </span>
                    }
                    else if (isExpiringSoon)
                    {
                        <span class="text-warning ms-2" data-bs-toggle="tooltip" data-bs-placement="top" data-bs-custom-class="custom-warning-tooltip" data-bs-title="@Lang.ProductExpiringSoon">
                            <i class="fa-solid fa-triangle-exclamation"></i>
                        </span>
                    }
                </td>
                <td>
                    <a class="btn btn-primary" asp-action="Edit" asp-route-id="@item.Id">@Lang.Edit</a>
                    <a class="btn btn-danger" asp-action="Delete" asp-route-id="@item.Id" onclick="return confirm('@Lang.DeleteProductConfirmationMessage')">@Lang.Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<div class="d-flex justify-content-between align-items-center mb-3">
    <!-- Pagination Controls on the Left -->
    <nav aria-label="Pagination">
        <ul class="pagination pagination-sm mb-0">
            <!-- Previous Button -->
            <li class="page-item @(pageNumber <= 1 ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("Index", new { pageNumber = pageNumber - 1, pageSize = pageSize, searchPhrase = searchPhrase, sortBy = sortBy, sortDirection = sortDirection, categoryIds = selectedCategoryIds })">@Lang.Previous</a>
            </li>

            <!-- First Page -->
            @if (startPage > 1)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", new { pageNumber = 1, pageSize = pageSize, searchPhrase = searchPhrase, sortBy = sortBy, sortDirection = sortDirection, categoryIds = selectedCategoryIds })">1</a>
                </li>
                @if (startPage > 2)
                {
                    <li class="page-item disabled"><span class="page-link">...</span></li>
                }
            }

            <!-- Main Page Links (Up to 3 Pages) -->
            @for (int i = startPage; i <= endPage; i++)
            {
                <li class="page-item @(pageNumber == i ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Index", new { pageNumber = i, pageSize = pageSize, searchPhrase = searchPhrase, sortBy = sortBy, sortDirection = sortDirection, categoryIds = selectedCategoryIds })">@i</a>
                </li>
            }

            <!-- Last Page -->
            @if (endPage < Model.TotalPages)
            {
                @if (endPage < Model.TotalPages - 1)
                {
                    <li class="page-item disabled"><span class="page-link">...</span></li>
                }
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", new { pageNumber = Model.TotalPages, pageSize = pageSize, searchPhrase = searchPhrase, sortBy = sortBy, sortDirection = sortDirection, categoryIds = selectedCategoryIds })">@Model.TotalPages</a>
                </li>
            }

            <!-- Next Button -->
            <li class="page-item @(pageNumber >= Model.TotalPages ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("Index", new { pageNumber = pageNumber + 1, pageSize = pageSize, searchPhrase = searchPhrase, sortBy = sortBy, sortDirection = sortDirection, categoryIds = selectedCategoryIds })">@Lang.Next</a>
            </li>
        </ul>
    </nav>

    <!-- Page Size Selection on the Right -->
    <nav aria-label="Page size">
        <ul class="pagination pagination-sm mb-0">
            <li class="me-2 d-flex align-items-center">
                <span>@Lang.ShowPerPage:</span>
            </li>
            @foreach (var size in @PaginationDefaults.AllowedPageSizes)
            {
                <li class="page-item @(pageSize == size ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Index", new { pageNumber = 1, pageSize = size, searchPhrase = searchPhrase, sortBy = sortBy, sortDirection = sortDirection, categoryIds = selectedCategoryIds })">@size</a>
                </li>
            }
        </ul>
    </nav>
</div>

<!-- Modal window with filters -->
<div class="modal fade" id="filtersModal" tabindex="-1" aria-labelledby="filtersModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form method="get" asp-action="Index">
                <div class="modal-header">
                    <h5 class="modal-title" id="filtersModalLabel">@Lang.Filters</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="@Lang.Close"></button>
                </div>
                <div class="modal-body">
                    <!-- Category filter -->
                    <h6>@Lang.Category</h6>
                    <div class="list-group overflow-auto" id="categoryFilterList" aria-labelledby="categoryFilterSection">
                    </div>
                </div>
                <div class="modal-footer">
                    <input type="hidden" name="SearchPhrase" value="@searchPhrase" />
                    <input type="hidden" name="PageSize" value="@pageSize" />
                    <input type="hidden" name="sortBy" value="@sortBy" />
                    <input type="hidden" name="SortDirection" value="@sortDirection" />
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">@Lang.Close</button>
                    <button type="submit" class="btn btn-primary">@Lang.Save</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        var selectedCategoryIds = @Html.Raw(Json.Serialize(selectedCategoryIds));
    </script>

    <link rel="stylesheet" href="~/css/product/index.css">
    <script src="~/js/Product/index.js"></script>
}
